//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/azuri_hirohinata/Desktop/ANTLR/CPPLINT/CPPLINT.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CPPLINTParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface ICPPLINTListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.translationunit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTranslationunit([NotNull] CPPLINTParser.TranslationunitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.translationunit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTranslationunit([NotNull] CPPLINTParser.TranslationunitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.primaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryexpression([NotNull] CPPLINTParser.PrimaryexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.primaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryexpression([NotNull] CPPLINTParser.PrimaryexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.idexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdexpression([NotNull] CPPLINTParser.IdexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.idexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdexpression([NotNull] CPPLINTParser.IdexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.unqualifiedid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnqualifiedid([NotNull] CPPLINTParser.UnqualifiedidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.unqualifiedid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnqualifiedid([NotNull] CPPLINTParser.UnqualifiedidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.qualifiedid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedid([NotNull] CPPLINTParser.QualifiedidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.qualifiedid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedid([NotNull] CPPLINTParser.QualifiedidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.nestednamespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNestednamespecifier([NotNull] CPPLINTParser.NestednamespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.nestednamespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNestednamespecifier([NotNull] CPPLINTParser.NestednamespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.lambdaexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaexpression([NotNull] CPPLINTParser.LambdaexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.lambdaexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaexpression([NotNull] CPPLINTParser.LambdaexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.lambdaintroducer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaintroducer([NotNull] CPPLINTParser.LambdaintroducerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.lambdaintroducer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaintroducer([NotNull] CPPLINTParser.LambdaintroducerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.lambdacapture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdacapture([NotNull] CPPLINTParser.LambdacaptureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.lambdacapture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdacapture([NotNull] CPPLINTParser.LambdacaptureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.capturedefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCapturedefault([NotNull] CPPLINTParser.CapturedefaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.capturedefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCapturedefault([NotNull] CPPLINTParser.CapturedefaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.capturelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCapturelist([NotNull] CPPLINTParser.CapturelistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.capturelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCapturelist([NotNull] CPPLINTParser.CapturelistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.capture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCapture([NotNull] CPPLINTParser.CaptureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.capture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCapture([NotNull] CPPLINTParser.CaptureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.simplecapture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimplecapture([NotNull] CPPLINTParser.SimplecaptureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.simplecapture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimplecapture([NotNull] CPPLINTParser.SimplecaptureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.initcapture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitcapture([NotNull] CPPLINTParser.InitcaptureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.initcapture"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitcapture([NotNull] CPPLINTParser.InitcaptureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.lambdadeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdadeclarator([NotNull] CPPLINTParser.LambdadeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.lambdadeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdadeclarator([NotNull] CPPLINTParser.LambdadeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.postfixexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfixexpression([NotNull] CPPLINTParser.PostfixexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.postfixexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfixexpression([NotNull] CPPLINTParser.PostfixexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typeidofexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeidofexpr([NotNull] CPPLINTParser.TypeidofexprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typeidofexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeidofexpr([NotNull] CPPLINTParser.TypeidofexprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typeidofthetypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeidofthetypeid([NotNull] CPPLINTParser.TypeidofthetypeidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typeidofthetypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeidofthetypeid([NotNull] CPPLINTParser.TypeidofthetypeidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.expressionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionlist([NotNull] CPPLINTParser.ExpressionlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.expressionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionlist([NotNull] CPPLINTParser.ExpressionlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.pseudodestructorname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPseudodestructorname([NotNull] CPPLINTParser.PseudodestructornameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.pseudodestructorname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPseudodestructorname([NotNull] CPPLINTParser.PseudodestructornameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.unaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryexpression([NotNull] CPPLINTParser.UnaryexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.unaryexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryexpression([NotNull] CPPLINTParser.UnaryexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.unaryoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryoperator([NotNull] CPPLINTParser.UnaryoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.unaryoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryoperator([NotNull] CPPLINTParser.UnaryoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.newexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewexpression([NotNull] CPPLINTParser.NewexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.newexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewexpression([NotNull] CPPLINTParser.NewexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.newplacement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewplacement([NotNull] CPPLINTParser.NewplacementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.newplacement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewplacement([NotNull] CPPLINTParser.NewplacementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.newtypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewtypeid([NotNull] CPPLINTParser.NewtypeidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.newtypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewtypeid([NotNull] CPPLINTParser.NewtypeidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.newdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewdeclarator([NotNull] CPPLINTParser.NewdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.newdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewdeclarator([NotNull] CPPLINTParser.NewdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.noptrnewdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoptrnewdeclarator([NotNull] CPPLINTParser.NoptrnewdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.noptrnewdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoptrnewdeclarator([NotNull] CPPLINTParser.NoptrnewdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.newinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewinitializer([NotNull] CPPLINTParser.NewinitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.newinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewinitializer([NotNull] CPPLINTParser.NewinitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.deleteexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteexpression([NotNull] CPPLINTParser.DeleteexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.deleteexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteexpression([NotNull] CPPLINTParser.DeleteexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.noexceptexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoexceptexpression([NotNull] CPPLINTParser.NoexceptexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.noexceptexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoexceptexpression([NotNull] CPPLINTParser.NoexceptexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.castexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastexpression([NotNull] CPPLINTParser.CastexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.castexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastexpression([NotNull] CPPLINTParser.CastexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.pmexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPmexpression([NotNull] CPPLINTParser.PmexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.pmexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPmexpression([NotNull] CPPLINTParser.PmexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.multiplicativeexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeexpression([NotNull] CPPLINTParser.MultiplicativeexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.multiplicativeexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeexpression([NotNull] CPPLINTParser.MultiplicativeexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.additiveexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveexpression([NotNull] CPPLINTParser.AdditiveexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.additiveexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveexpression([NotNull] CPPLINTParser.AdditiveexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.shiftexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftexpression([NotNull] CPPLINTParser.ShiftexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.shiftexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftexpression([NotNull] CPPLINTParser.ShiftexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.shiftoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftoperator([NotNull] CPPLINTParser.ShiftoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.shiftoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftoperator([NotNull] CPPLINTParser.ShiftoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.relationalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalexpression([NotNull] CPPLINTParser.RelationalexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.relationalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalexpression([NotNull] CPPLINTParser.RelationalexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.equalityexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityexpression([NotNull] CPPLINTParser.EqualityexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.equalityexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityexpression([NotNull] CPPLINTParser.EqualityexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.andexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndexpression([NotNull] CPPLINTParser.AndexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.andexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndexpression([NotNull] CPPLINTParser.AndexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.exclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveorexpression([NotNull] CPPLINTParser.ExclusiveorexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.exclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveorexpression([NotNull] CPPLINTParser.ExclusiveorexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.inclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusiveorexpression([NotNull] CPPLINTParser.InclusiveorexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.inclusiveorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusiveorexpression([NotNull] CPPLINTParser.InclusiveorexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.logicalandexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalandexpression([NotNull] CPPLINTParser.LogicalandexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.logicalandexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalandexpression([NotNull] CPPLINTParser.LogicalandexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.logicalorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalorexpression([NotNull] CPPLINTParser.LogicalorexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.logicalorexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalorexpression([NotNull] CPPLINTParser.LogicalorexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.conditionalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalexpression([NotNull] CPPLINTParser.ConditionalexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.conditionalexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalexpression([NotNull] CPPLINTParser.ConditionalexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.assignmentexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentexpression([NotNull] CPPLINTParser.AssignmentexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.assignmentexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentexpression([NotNull] CPPLINTParser.AssignmentexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.assignmentoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentoperator([NotNull] CPPLINTParser.AssignmentoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.assignmentoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentoperator([NotNull] CPPLINTParser.AssignmentoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CPPLINTParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CPPLINTParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.constantexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantexpression([NotNull] CPPLINTParser.ConstantexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.constantexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantexpression([NotNull] CPPLINTParser.ConstantexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CPPLINTParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CPPLINTParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>gotostatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotostatement([NotNull] CPPLINTParser.GotostatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>gotostatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotostatement([NotNull] CPPLINTParser.GotostatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>casestatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCasestatement([NotNull] CPPLINTParser.CasestatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>casestatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCasestatement([NotNull] CPPLINTParser.CasestatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>defaultstatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultstatement([NotNull] CPPLINTParser.DefaultstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>defaultstatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.labeledstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultstatement([NotNull] CPPLINTParser.DefaultstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.expressionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionstatement([NotNull] CPPLINTParser.ExpressionstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.expressionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionstatement([NotNull] CPPLINTParser.ExpressionstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.compoundstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundstatement([NotNull] CPPLINTParser.CompoundstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.compoundstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundstatement([NotNull] CPPLINTParser.CompoundstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.statementseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementseq([NotNull] CPPLINTParser.StatementseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.statementseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementseq([NotNull] CPPLINTParser.StatementseqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifstatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfstatement([NotNull] CPPLINTParser.IfstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifstatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfstatement([NotNull] CPPLINTParser.IfstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifelsestatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfelsestatement([NotNull] CPPLINTParser.IfelsestatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifelsestatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfelsestatement([NotNull] CPPLINTParser.IfelsestatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>switchstatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchstatement([NotNull] CPPLINTParser.SwitchstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>switchstatement</c>
	/// labeled alternative in <see cref="CPPLINTParser.selectionstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchstatement([NotNull] CPPLINTParser.SwitchstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] CPPLINTParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] CPPLINTParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.iterationstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationstatement([NotNull] CPPLINTParser.IterationstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.iterationstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationstatement([NotNull] CPPLINTParser.IterationstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.forinitstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForinitstatement([NotNull] CPPLINTParser.ForinitstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.forinitstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForinitstatement([NotNull] CPPLINTParser.ForinitstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.forrangedeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForrangedeclaration([NotNull] CPPLINTParser.ForrangedeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.forrangedeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForrangedeclaration([NotNull] CPPLINTParser.ForrangedeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.forrangeinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForrangeinitializer([NotNull] CPPLINTParser.ForrangeinitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.forrangeinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForrangeinitializer([NotNull] CPPLINTParser.ForrangeinitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.jumpstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpstatement([NotNull] CPPLINTParser.JumpstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.jumpstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpstatement([NotNull] CPPLINTParser.JumpstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.declarationstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationstatement([NotNull] CPPLINTParser.DeclarationstatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.declarationstatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationstatement([NotNull] CPPLINTParser.DeclarationstatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.declarationseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationseq([NotNull] CPPLINTParser.DeclarationseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.declarationseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationseq([NotNull] CPPLINTParser.DeclarationseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] CPPLINTParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] CPPLINTParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.blockdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockdeclaration([NotNull] CPPLINTParser.BlockdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.blockdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockdeclaration([NotNull] CPPLINTParser.BlockdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.aliasdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAliasdeclaration([NotNull] CPPLINTParser.AliasdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.aliasdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAliasdeclaration([NotNull] CPPLINTParser.AliasdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.simpledeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpledeclaration([NotNull] CPPLINTParser.SimpledeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.simpledeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpledeclaration([NotNull] CPPLINTParser.SimpledeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.static_assertdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatic_assertdeclaration([NotNull] CPPLINTParser.Static_assertdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.static_assertdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatic_assertdeclaration([NotNull] CPPLINTParser.Static_assertdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.emptydeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptydeclaration([NotNull] CPPLINTParser.EmptydeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.emptydeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptydeclaration([NotNull] CPPLINTParser.EmptydeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributedeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributedeclaration([NotNull] CPPLINTParser.AttributedeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributedeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributedeclaration([NotNull] CPPLINTParser.AttributedeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.declspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclspecifier([NotNull] CPPLINTParser.DeclspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.declspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclspecifier([NotNull] CPPLINTParser.DeclspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.declspecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclspecifierseq([NotNull] CPPLINTParser.DeclspecifierseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.declspecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclspecifierseq([NotNull] CPPLINTParser.DeclspecifierseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.storageclassspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStorageclassspecifier([NotNull] CPPLINTParser.StorageclassspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.storageclassspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStorageclassspecifier([NotNull] CPPLINTParser.StorageclassspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.functionspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionspecifier([NotNull] CPPLINTParser.FunctionspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.functionspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionspecifier([NotNull] CPPLINTParser.FunctionspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typedefname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedefname([NotNull] CPPLINTParser.TypedefnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typedefname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedefname([NotNull] CPPLINTParser.TypedefnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypespecifier([NotNull] CPPLINTParser.TypespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypespecifier([NotNull] CPPLINTParser.TypespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.trailingtypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrailingtypespecifier([NotNull] CPPLINTParser.TrailingtypespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.trailingtypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrailingtypespecifier([NotNull] CPPLINTParser.TrailingtypespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typespecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypespecifierseq([NotNull] CPPLINTParser.TypespecifierseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typespecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypespecifierseq([NotNull] CPPLINTParser.TypespecifierseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.trailingtypespecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrailingtypespecifierseq([NotNull] CPPLINTParser.TrailingtypespecifierseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.trailingtypespecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrailingtypespecifierseq([NotNull] CPPLINTParser.TrailingtypespecifierseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.simpletypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpletypespecifier([NotNull] CPPLINTParser.SimpletypespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.simpletypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpletypespecifier([NotNull] CPPLINTParser.SimpletypespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.thetypename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThetypename([NotNull] CPPLINTParser.ThetypenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.thetypename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThetypename([NotNull] CPPLINTParser.ThetypenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.decltypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecltypespecifier([NotNull] CPPLINTParser.DecltypespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.decltypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecltypespecifier([NotNull] CPPLINTParser.DecltypespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.elaboratedtypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElaboratedtypespecifier([NotNull] CPPLINTParser.ElaboratedtypespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.elaboratedtypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElaboratedtypespecifier([NotNull] CPPLINTParser.ElaboratedtypespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumname([NotNull] CPPLINTParser.EnumnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumname([NotNull] CPPLINTParser.EnumnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumspecifier([NotNull] CPPLINTParser.EnumspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumspecifier([NotNull] CPPLINTParser.EnumspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumhead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumhead([NotNull] CPPLINTParser.EnumheadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumhead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumhead([NotNull] CPPLINTParser.EnumheadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.opaqueenumdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpaqueenumdeclaration([NotNull] CPPLINTParser.OpaqueenumdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.opaqueenumdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpaqueenumdeclaration([NotNull] CPPLINTParser.OpaqueenumdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumkey([NotNull] CPPLINTParser.EnumkeyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumkey([NotNull] CPPLINTParser.EnumkeyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumbase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumbase([NotNull] CPPLINTParser.EnumbaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumbase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumbase([NotNull] CPPLINTParser.EnumbaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumeratorlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeratorlist([NotNull] CPPLINTParser.EnumeratorlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumeratorlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeratorlist([NotNull] CPPLINTParser.EnumeratorlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumeratordefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeratordefinition([NotNull] CPPLINTParser.EnumeratordefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumeratordefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeratordefinition([NotNull] CPPLINTParser.EnumeratordefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.enumerator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerator([NotNull] CPPLINTParser.EnumeratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.enumerator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerator([NotNull] CPPLINTParser.EnumeratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.namespacename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespacename([NotNull] CPPLINTParser.NamespacenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.namespacename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespacename([NotNull] CPPLINTParser.NamespacenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.originalnamespacename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOriginalnamespacename([NotNull] CPPLINTParser.OriginalnamespacenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.originalnamespacename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOriginalnamespacename([NotNull] CPPLINTParser.OriginalnamespacenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.namespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespacedefinition([NotNull] CPPLINTParser.NamespacedefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.namespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespacedefinition([NotNull] CPPLINTParser.NamespacedefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.namednamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamednamespacedefinition([NotNull] CPPLINTParser.NamednamespacedefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.namednamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamednamespacedefinition([NotNull] CPPLINTParser.NamednamespacedefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.originalnamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOriginalnamespacedefinition([NotNull] CPPLINTParser.OriginalnamespacedefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.originalnamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOriginalnamespacedefinition([NotNull] CPPLINTParser.OriginalnamespacedefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.extensionnamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtensionnamespacedefinition([NotNull] CPPLINTParser.ExtensionnamespacedefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.extensionnamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtensionnamespacedefinition([NotNull] CPPLINTParser.ExtensionnamespacedefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.unnamednamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnnamednamespacedefinition([NotNull] CPPLINTParser.UnnamednamespacedefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.unnamednamespacedefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnnamednamespacedefinition([NotNull] CPPLINTParser.UnnamednamespacedefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.namespacebody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespacebody([NotNull] CPPLINTParser.NamespacebodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.namespacebody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespacebody([NotNull] CPPLINTParser.NamespacebodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.namespacealias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespacealias([NotNull] CPPLINTParser.NamespacealiasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.namespacealias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespacealias([NotNull] CPPLINTParser.NamespacealiasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.namespacealiasdefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespacealiasdefinition([NotNull] CPPLINTParser.NamespacealiasdefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.namespacealiasdefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespacealiasdefinition([NotNull] CPPLINTParser.NamespacealiasdefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.qualifiednamespacespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiednamespacespecifier([NotNull] CPPLINTParser.QualifiednamespacespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.qualifiednamespacespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiednamespacespecifier([NotNull] CPPLINTParser.QualifiednamespacespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.usingdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingdeclaration([NotNull] CPPLINTParser.UsingdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.usingdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingdeclaration([NotNull] CPPLINTParser.UsingdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.usingdirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingdirective([NotNull] CPPLINTParser.UsingdirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.usingdirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingdirective([NotNull] CPPLINTParser.UsingdirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.asmdefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsmdefinition([NotNull] CPPLINTParser.AsmdefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.asmdefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsmdefinition([NotNull] CPPLINTParser.AsmdefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.linkagespecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLinkagespecification([NotNull] CPPLINTParser.LinkagespecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.linkagespecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLinkagespecification([NotNull] CPPLINTParser.LinkagespecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributespecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributespecifierseq([NotNull] CPPLINTParser.AttributespecifierseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributespecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributespecifierseq([NotNull] CPPLINTParser.AttributespecifierseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributespecifier([NotNull] CPPLINTParser.AttributespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributespecifier([NotNull] CPPLINTParser.AttributespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.alignmentspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlignmentspecifier([NotNull] CPPLINTParser.AlignmentspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.alignmentspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlignmentspecifier([NotNull] CPPLINTParser.AlignmentspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributelist([NotNull] CPPLINTParser.AttributelistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributelist([NotNull] CPPLINTParser.AttributelistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] CPPLINTParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] CPPLINTParser.AttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributetoken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributetoken([NotNull] CPPLINTParser.AttributetokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributetoken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributetoken([NotNull] CPPLINTParser.AttributetokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributescopedtoken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributescopedtoken([NotNull] CPPLINTParser.AttributescopedtokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributescopedtoken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributescopedtoken([NotNull] CPPLINTParser.AttributescopedtokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributenamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributenamespace([NotNull] CPPLINTParser.AttributenamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributenamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributenamespace([NotNull] CPPLINTParser.AttributenamespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.attributeargumentclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeargumentclause([NotNull] CPPLINTParser.AttributeargumentclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.attributeargumentclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeargumentclause([NotNull] CPPLINTParser.AttributeargumentclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.balancedtokenseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBalancedtokenseq([NotNull] CPPLINTParser.BalancedtokenseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.balancedtokenseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBalancedtokenseq([NotNull] CPPLINTParser.BalancedtokenseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.balancedtoken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBalancedtoken([NotNull] CPPLINTParser.BalancedtokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.balancedtoken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBalancedtoken([NotNull] CPPLINTParser.BalancedtokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.initdeclaratorlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitdeclaratorlist([NotNull] CPPLINTParser.InitdeclaratorlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.initdeclaratorlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitdeclaratorlist([NotNull] CPPLINTParser.InitdeclaratorlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.initdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitdeclarator([NotNull] CPPLINTParser.InitdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.initdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitdeclarator([NotNull] CPPLINTParser.InitdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarator([NotNull] CPPLINTParser.DeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarator([NotNull] CPPLINTParser.DeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.ptrdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPtrdeclarator([NotNull] CPPLINTParser.PtrdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.ptrdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPtrdeclarator([NotNull] CPPLINTParser.PtrdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.noptrdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoptrdeclarator([NotNull] CPPLINTParser.NoptrdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.noptrdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoptrdeclarator([NotNull] CPPLINTParser.NoptrdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.parametersandqualifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParametersandqualifiers([NotNull] CPPLINTParser.ParametersandqualifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.parametersandqualifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParametersandqualifiers([NotNull] CPPLINTParser.ParametersandqualifiersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.trailingreturntype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrailingreturntype([NotNull] CPPLINTParser.TrailingreturntypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.trailingreturntype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrailingreturntype([NotNull] CPPLINTParser.TrailingreturntypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.ptroperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPtroperator([NotNull] CPPLINTParser.PtroperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.ptroperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPtroperator([NotNull] CPPLINTParser.PtroperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.cvqualifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCvqualifierseq([NotNull] CPPLINTParser.CvqualifierseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.cvqualifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCvqualifierseq([NotNull] CPPLINTParser.CvqualifierseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.cvqualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCvqualifier([NotNull] CPPLINTParser.CvqualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.cvqualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCvqualifier([NotNull] CPPLINTParser.CvqualifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.refqualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRefqualifier([NotNull] CPPLINTParser.RefqualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.refqualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRefqualifier([NotNull] CPPLINTParser.RefqualifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.declaratorid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaratorid([NotNull] CPPLINTParser.DeclaratoridContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.declaratorid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaratorid([NotNull] CPPLINTParser.DeclaratoridContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.thetypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThetypeid([NotNull] CPPLINTParser.ThetypeidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.thetypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThetypeid([NotNull] CPPLINTParser.ThetypeidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.abstractdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractdeclarator([NotNull] CPPLINTParser.AbstractdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.abstractdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractdeclarator([NotNull] CPPLINTParser.AbstractdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.ptrabstractdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPtrabstractdeclarator([NotNull] CPPLINTParser.PtrabstractdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.ptrabstractdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPtrabstractdeclarator([NotNull] CPPLINTParser.PtrabstractdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.noptrabstractdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoptrabstractdeclarator([NotNull] CPPLINTParser.NoptrabstractdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.noptrabstractdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoptrabstractdeclarator([NotNull] CPPLINTParser.NoptrabstractdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.abstractpackdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractpackdeclarator([NotNull] CPPLINTParser.AbstractpackdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.abstractpackdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractpackdeclarator([NotNull] CPPLINTParser.AbstractpackdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.noptrabstractpackdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoptrabstractpackdeclarator([NotNull] CPPLINTParser.NoptrabstractpackdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.noptrabstractpackdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoptrabstractpackdeclarator([NotNull] CPPLINTParser.NoptrabstractpackdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.parameterdeclarationclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterdeclarationclause([NotNull] CPPLINTParser.ParameterdeclarationclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.parameterdeclarationclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterdeclarationclause([NotNull] CPPLINTParser.ParameterdeclarationclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.parameterdeclarationlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterdeclarationlist([NotNull] CPPLINTParser.ParameterdeclarationlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.parameterdeclarationlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterdeclarationlist([NotNull] CPPLINTParser.ParameterdeclarationlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.parameterdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterdeclaration([NotNull] CPPLINTParser.ParameterdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.parameterdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterdeclaration([NotNull] CPPLINTParser.ParameterdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.functiondefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctiondefinition([NotNull] CPPLINTParser.FunctiondefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.functiondefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctiondefinition([NotNull] CPPLINTParser.FunctiondefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.functionbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionbody([NotNull] CPPLINTParser.FunctionbodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.functionbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionbody([NotNull] CPPLINTParser.FunctionbodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializer([NotNull] CPPLINTParser.InitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializer([NotNull] CPPLINTParser.InitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.braceorequalinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBraceorequalinitializer([NotNull] CPPLINTParser.BraceorequalinitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.braceorequalinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBraceorequalinitializer([NotNull] CPPLINTParser.BraceorequalinitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.initializerclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializerclause([NotNull] CPPLINTParser.InitializerclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.initializerclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializerclause([NotNull] CPPLINTParser.InitializerclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.initializerlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializerlist([NotNull] CPPLINTParser.InitializerlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.initializerlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializerlist([NotNull] CPPLINTParser.InitializerlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.bracedinitlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBracedinitlist([NotNull] CPPLINTParser.BracedinitlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.bracedinitlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBracedinitlist([NotNull] CPPLINTParser.BracedinitlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.classname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassname([NotNull] CPPLINTParser.ClassnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.classname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassname([NotNull] CPPLINTParser.ClassnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.classspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassspecifier([NotNull] CPPLINTParser.ClassspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.classspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassspecifier([NotNull] CPPLINTParser.ClassspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.classhead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClasshead([NotNull] CPPLINTParser.ClassheadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.classhead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClasshead([NotNull] CPPLINTParser.ClassheadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.classheadname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassheadname([NotNull] CPPLINTParser.ClassheadnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.classheadname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassheadname([NotNull] CPPLINTParser.ClassheadnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.classvirtspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassvirtspecifier([NotNull] CPPLINTParser.ClassvirtspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.classvirtspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassvirtspecifier([NotNull] CPPLINTParser.ClassvirtspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.classkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClasskey([NotNull] CPPLINTParser.ClasskeyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.classkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClasskey([NotNull] CPPLINTParser.ClasskeyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.memberspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberspecification([NotNull] CPPLINTParser.MemberspecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.memberspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberspecification([NotNull] CPPLINTParser.MemberspecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.memberdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberdeclaration([NotNull] CPPLINTParser.MemberdeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.memberdeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberdeclaration([NotNull] CPPLINTParser.MemberdeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.memberdeclaratorlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberdeclaratorlist([NotNull] CPPLINTParser.MemberdeclaratorlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.memberdeclaratorlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberdeclaratorlist([NotNull] CPPLINTParser.MemberdeclaratorlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.memberdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberdeclarator([NotNull] CPPLINTParser.MemberdeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.memberdeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberdeclarator([NotNull] CPPLINTParser.MemberdeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.virtspecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVirtspecifierseq([NotNull] CPPLINTParser.VirtspecifierseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.virtspecifierseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVirtspecifierseq([NotNull] CPPLINTParser.VirtspecifierseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.virtspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVirtspecifier([NotNull] CPPLINTParser.VirtspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.virtspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVirtspecifier([NotNull] CPPLINTParser.VirtspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.purespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPurespecifier([NotNull] CPPLINTParser.PurespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.purespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPurespecifier([NotNull] CPPLINTParser.PurespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.baseclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseclause([NotNull] CPPLINTParser.BaseclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.baseclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseclause([NotNull] CPPLINTParser.BaseclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.basespecifierlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasespecifierlist([NotNull] CPPLINTParser.BasespecifierlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.basespecifierlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasespecifierlist([NotNull] CPPLINTParser.BasespecifierlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.basespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasespecifier([NotNull] CPPLINTParser.BasespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.basespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasespecifier([NotNull] CPPLINTParser.BasespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.classordecltype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassordecltype([NotNull] CPPLINTParser.ClassordecltypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.classordecltype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassordecltype([NotNull] CPPLINTParser.ClassordecltypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.basetypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasetypespecifier([NotNull] CPPLINTParser.BasetypespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.basetypespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasetypespecifier([NotNull] CPPLINTParser.BasetypespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.accessspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessspecifier([NotNull] CPPLINTParser.AccessspecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.accessspecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessspecifier([NotNull] CPPLINTParser.AccessspecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.conversionfunctionid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConversionfunctionid([NotNull] CPPLINTParser.ConversionfunctionidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.conversionfunctionid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConversionfunctionid([NotNull] CPPLINTParser.ConversionfunctionidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.conversiontypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConversiontypeid([NotNull] CPPLINTParser.ConversiontypeidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.conversiontypeid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConversiontypeid([NotNull] CPPLINTParser.ConversiontypeidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.conversiondeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConversiondeclarator([NotNull] CPPLINTParser.ConversiondeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.conversiondeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConversiondeclarator([NotNull] CPPLINTParser.ConversiondeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.ctorinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtorinitializer([NotNull] CPPLINTParser.CtorinitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.ctorinitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtorinitializer([NotNull] CPPLINTParser.CtorinitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.meminitializerlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMeminitializerlist([NotNull] CPPLINTParser.MeminitializerlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.meminitializerlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMeminitializerlist([NotNull] CPPLINTParser.MeminitializerlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.meminitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMeminitializer([NotNull] CPPLINTParser.MeminitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.meminitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMeminitializer([NotNull] CPPLINTParser.MeminitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.meminitializerid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMeminitializerid([NotNull] CPPLINTParser.MeminitializeridContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.meminitializerid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMeminitializerid([NotNull] CPPLINTParser.MeminitializeridContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.operatorfunctionid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorfunctionid([NotNull] CPPLINTParser.OperatorfunctionidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.operatorfunctionid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorfunctionid([NotNull] CPPLINTParser.OperatorfunctionidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.literaloperatorid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteraloperatorid([NotNull] CPPLINTParser.LiteraloperatoridContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.literaloperatorid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteraloperatorid([NotNull] CPPLINTParser.LiteraloperatoridContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.templatedeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplatedeclaration([NotNull] CPPLINTParser.TemplatedeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.templatedeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplatedeclaration([NotNull] CPPLINTParser.TemplatedeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.templateparameterlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateparameterlist([NotNull] CPPLINTParser.TemplateparameterlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.templateparameterlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateparameterlist([NotNull] CPPLINTParser.TemplateparameterlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.templateparameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateparameter([NotNull] CPPLINTParser.TemplateparameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.templateparameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateparameter([NotNull] CPPLINTParser.TemplateparameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typeparameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeparameter([NotNull] CPPLINTParser.TypeparameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typeparameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeparameter([NotNull] CPPLINTParser.TypeparameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.simpletemplateid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpletemplateid([NotNull] CPPLINTParser.SimpletemplateidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.simpletemplateid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpletemplateid([NotNull] CPPLINTParser.SimpletemplateidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.templateid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateid([NotNull] CPPLINTParser.TemplateidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.templateid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateid([NotNull] CPPLINTParser.TemplateidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.templatename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplatename([NotNull] CPPLINTParser.TemplatenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.templatename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplatename([NotNull] CPPLINTParser.TemplatenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.templateargumentlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateargumentlist([NotNull] CPPLINTParser.TemplateargumentlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.templateargumentlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateargumentlist([NotNull] CPPLINTParser.TemplateargumentlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.templateargument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateargument([NotNull] CPPLINTParser.TemplateargumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.templateargument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateargument([NotNull] CPPLINTParser.TemplateargumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typenamespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenamespecifier([NotNull] CPPLINTParser.TypenamespecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typenamespecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenamespecifier([NotNull] CPPLINTParser.TypenamespecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.explicitinstantiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitinstantiation([NotNull] CPPLINTParser.ExplicitinstantiationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.explicitinstantiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitinstantiation([NotNull] CPPLINTParser.ExplicitinstantiationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.explicitspecialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitspecialization([NotNull] CPPLINTParser.ExplicitspecializationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.explicitspecialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitspecialization([NotNull] CPPLINTParser.ExplicitspecializationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.tryblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTryblock([NotNull] CPPLINTParser.TryblockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.tryblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTryblock([NotNull] CPPLINTParser.TryblockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.functiontryblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctiontryblock([NotNull] CPPLINTParser.FunctiontryblockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.functiontryblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctiontryblock([NotNull] CPPLINTParser.FunctiontryblockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.handlerseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandlerseq([NotNull] CPPLINTParser.HandlerseqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.handlerseq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandlerseq([NotNull] CPPLINTParser.HandlerseqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.handler"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandler([NotNull] CPPLINTParser.HandlerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.handler"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandler([NotNull] CPPLINTParser.HandlerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.exceptiondeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExceptiondeclaration([NotNull] CPPLINTParser.ExceptiondeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.exceptiondeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExceptiondeclaration([NotNull] CPPLINTParser.ExceptiondeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.throwexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrowexpression([NotNull] CPPLINTParser.ThrowexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.throwexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrowexpression([NotNull] CPPLINTParser.ThrowexpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.exceptionspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExceptionspecification([NotNull] CPPLINTParser.ExceptionspecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.exceptionspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExceptionspecification([NotNull] CPPLINTParser.ExceptionspecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.dynamicexceptionspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDynamicexceptionspecification([NotNull] CPPLINTParser.DynamicexceptionspecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.dynamicexceptionspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDynamicexceptionspecification([NotNull] CPPLINTParser.DynamicexceptionspecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.typeidlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeidlist([NotNull] CPPLINTParser.TypeidlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.typeidlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeidlist([NotNull] CPPLINTParser.TypeidlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.noexceptspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoexceptspecification([NotNull] CPPLINTParser.NoexceptspecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.noexceptspecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoexceptspecification([NotNull] CPPLINTParser.NoexceptspecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.theoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTheoperator([NotNull] CPPLINTParser.TheoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.theoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTheoperator([NotNull] CPPLINTParser.TheoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] CPPLINTParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] CPPLINTParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.booleanliteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanliteral([NotNull] CPPLINTParser.BooleanliteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.booleanliteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanliteral([NotNull] CPPLINTParser.BooleanliteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.pointerliteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointerliteral([NotNull] CPPLINTParser.PointerliteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.pointerliteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointerliteral([NotNull] CPPLINTParser.PointerliteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CPPLINTParser.userdefinedliteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUserdefinedliteral([NotNull] CPPLINTParser.UserdefinedliteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CPPLINTParser.userdefinedliteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUserdefinedliteral([NotNull] CPPLINTParser.UserdefinedliteralContext context);
}
